{"version":3,"sources":["src/PivotTableUI.jsx"],"names":["HelpConstants","DraggableAttribute","props","state","open","filterText","showTooltip","nextProps","nextContext","name","console","log","valueFilter","Object","keys","length","isSelected","removeValuesFromFilter","value","addValuesToFilter","x","toLowerCase","trim","includes","e","stopPropagation","setValuesInFilter","attrValues","filter","y","showMenu","menuLimit","values","shown","matchesFilter","bind","sort","sorter","display","cursor","zIndex","moveFilterBoxToTop","setState","code","charCode","keyCode","target","map","toggleValue","replace","chevronClass","filtered","hideTooltips","showTooltips","cols","indexOf","onUpdateProperties","$set","item","rows","toggleFilterBox","getFilterBox","React","Component","defaultProps","propTypes","PropTypes","string","isRequired","func","clearFilters","objectOf","number","bool","Dropdown","toggle","current","r","setValue","onSearchChange","s","PureComponent","PivotTableUI","unusedOrder","zIndices","maxZIndex","openDropdown","materializeInput","data","nextData","materializedInput","recordsProcessed","PivotData","forEachRecord","derivedAttributes","record","push","attr","null","command","onChange","key","sendPropUpdate","attribute","reduce","v","$unset","dropdown","items","classes","categories","undefined","selectedList","concat","collapsibles","draggables","category","sorters","group","ghostClass","preventOnFilter","numValsAllowed","aggregators","aggregatorName","numInputs","rendererName","renderers","rendererCell","isOpen","propUpdater","sortIcons","key_a_to_z","rowSymbol","colSymbol","next","value_a_to_z","value_z_to_a","aggregatorCell","SORT_ROWS","rowOrder","SORT_COLUMNS","colOrder","unusedAttrs","hiddenAttributes","hiddenFromDragDrop","unusedLength","horizUnused","unusedOrientationCutoff","unusedAttrsCell","makeDnDCell","order","categoryToAttrMapping","colAttrs","colAttrsCell","rowAttrs","rowAttrsCell","outputCell","assign","PivotTable","arrayOf","hiddenFromAggregators"],"mappings":"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","file":"PivotTableUI.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport {PivotData, sortAs, getSort} from './Utilities';\nimport PivotTable from './PivotTable';\nimport Sortable from 'react-sortablejs';\nimport Draggable from 'react-draggable';\nimport Collapsible from 'react-collapsible';\nimport SearchFilterUI from \"./SearchFilterView\";\nimport Tooltip from 'react-tooltip-lite';\nimport Checkbox from '@material/react-checkbox';\nimport MaterialIcon from '@material/react-material-icon';\nimport * as HelpConstants from './HelpConstants';\n\nimport \"@material/react-checkbox/dist/checkbox.css\";\nimport '@material/react-material-icon/dist/material-icon.css'\n\n/* eslint-disable react/prop-types */\n// eslint can't see inherited propTypes!\n\nexport class DraggableAttribute extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {open: false, filterText: '', showTooltip : false};\n  }\n  componentWillReceiveProps(nextProps, nextContext) {\n    if(this.props.name === \"Race\") {\n      console.log(this.props.valueFilter);\n    }\n    if(Object.keys(this.props.valueFilter).length > 0 && !nextProps.isSelected) {\n      this.props.removeValuesFromFilter(this.props.name, Object.keys(this.props.valueFilter));\n    }\n  }\n\n  toggleValue(value) {\n    if (value in this.props.valueFilter) {\n      this.props.removeValuesFromFilter(this.props.name, [value]);\n    } else {\n      this.props.addValuesToFilter(this.props.name, [value]);\n    }\n  }\n\n  matchesFilter(x) {\n    return x\n      .toLowerCase()\n      .trim()\n      .includes(this.state.filterText.toLowerCase().trim());\n  }\n\n  selectOnly(e, value) {\n    e.stopPropagation();\n    this.props.setValuesInFilter(\n      this.props.name,\n      Object.keys(this.props.attrValues).filter(y => y !== value)\n    );\n  }\n\n  getFilterBox() {\n    const showMenu =\n      Object.keys(this.props.attrValues).length < this.props.menuLimit;\n\n    const values = Object.keys(this.props.attrValues);\n    const shown = values\n      .filter(this.matchesFilter.bind(this))\n      .sort(this.props.sorter);\n\n    return (\n      <Draggable handle=\".pvtDragHandle\">\n        <div\n          className=\"pvtFilterBox\"\n          style={{\n            display: 'block',\n            cursor: 'initial',\n            zIndex: this.props.zIndex\n          }}\n          onClick={() => this.props.moveFilterBoxToTop(this.props.name)}\n        >\n          <a onClick={() => this.setState({open: false})} className=\"pvtCloseX\">\n            ×\n          </a>\n          <span className=\"pvtDragHandle\">⠿</span>\n          <h4>{this.props.name}</h4>\n\n\n          {showMenu || <p>(too many values to show)</p>}\n\n          {showMenu && (\n            <p>\n              <input\n                type=\"text\"\n                placeholder=\"Filter values\"\n                className=\"pvtSearch\"\n                value={this.state.filterText}\n                onKeyUp={ e => {\n                  let code = e.charCode || e.keyCode;\n                  if(code === 27 && this.state.filterText === \"\"){\n                    this.setState({open: false});\n                  } else if (code === 27) {\n                    this.setState({\n                      filterText: \"\",\n                    })\n                  } \n                }}\n                onChange={e =>\n                  this.setState({\n                    filterText: e.target.value,\n                  })\n                }\n              />\n              <br />\n              <a\n                role=\"button\"\n                className=\"pvtButton\"\n                onClick={() =>\n                  this.props.removeValuesFromFilter(\n                    this.props.name,\n                    Object.keys(this.props.attrValues).filter(\n                      this.matchesFilter.bind(this)\n                    )\n                  )\n                }\n              >\n                Select {values.length === shown.length ? 'All' : shown.length}\n              </a>{' '}\n              <a\n                role=\"button\"\n                className=\"pvtButton\"\n                onClick={() =>\n                  this.props.addValuesToFilter(\n                    this.props.name,\n                    Object.keys(this.props.attrValues).filter(\n                      this.matchesFilter.bind(this)\n                    )\n                  )\n                }\n              >\n                Deselect {values.length === shown.length ? 'All' : shown.length}\n              </a>\n            </p>\n          )}\n\n          {showMenu && (\n            <div className=\"pvtCheckContainer\">\n              {shown.map(x => (\n                <p\n                  key={x}\n                  onClick={() => this.toggleValue(x)}\n                  className={x in this.props.valueFilter ? '' : 'selected'}\n                >\n                  <Checkbox\n                    nativeControlId={x.replace(' ','').toLowerCase()}\n                    checked={x in this.props.valueFilter ? false : true }\n                    onChange={(e) => this.toggleValue(x)}\n                  />\n\n                  <label htmlFor={x.replace(' ','').toLowerCase()}>{x === '' ? <em>null</em> : x}</label>\n                </p>\n              ))}\n            </div>\n          )}\n        </div>\n      </Draggable>\n    );\n  }\n\n  toggleFilterBox() {\n    this.setState({ open: !this.state.open});\n    this.props.moveFilterBoxToTop(this.props.name);\n  }\n\n  hideTooltips(){\n    this.setState({ showTooltip: false});\n  }\n\n  showTooltips(){\n    this.setState({ showTooltip: true});\n  }\n\n\n  render() {\n    let chevronClass = (this.state.open === false) ? \"pvt-attr-chevron-down\" : \"pvt-attr-chevron-up\"\n    chevronClass += (this.props.isSelected === false) ? \" pvt-attr-close-hidden\" : \" pvt-attr-close-visible\";\n    const filtered =\n      Object.keys(this.props.valueFilter).length !== 0\n        ?  (<span className= {(this.props.isSelected === false) ? \"pvtTriangleHide\" : \"pvtTriangle\"}>\n          <MaterialIcon icon=\"filter_list\" className=\"pvtIcon\"/></span>)\n        : (<span></span>);\n    return (\n      <li data-id={this.props.name}>\n        <span className={'pvtAttr'} onDrag={this.hideTooltips.bind(this)} onMouseOver={this.showTooltips.bind(this)}\n              onMouseLeave={this.hideTooltips.bind(this)} onDrop={this.showTooltips.bind(this)}>\n          <Tooltip content={this.props.name} hoverDelay={200} useHover={this.state.showTooltip}>\n          <div className=\"pvt-braille-pattern\">⠿</div>\n          <div className=\"pvt-attr-container\">\n            <div className={(this.props.isSelected === false) ? \"pvt-attr-text-container-left\" : \"pvt-attr-text-container\"}\n                 data-tip={this.props.name}>{filtered} {this.props.name}\n            </div>\n            <span\n              className={(this.props.isSelected === false) ? \"pvt-attr-close-hidden\" : \"pvt-attr-close-visible\"}\n              onClick={ ()=> {\n\n                if (this.props.cols.indexOf(this.props.name) !== -1) {\n                  this.props.onUpdateProperties(\n                    {\n                      cols: {$set: this.props.cols.filter( (item) => { return item !== this.props.name})}\n                    }\n                    );\n                } else if (this.props.rows.indexOf(this.props.name) !== -1) {\n                  this.props.onUpdateProperties(\n                    {\n                      rows: {$set: this.props.rows.filter( (item) => { return item !== this.props.name})}\n                    }\n                    );\n                }\n              }}\n            >\n              {'   '}\n              ✕\n            </span>\n            <span className={chevronClass} onClick={this.toggleFilterBox.bind(this)}>▾</span> \n          </div>\n          </Tooltip>\n        </span>\n        {this.state.open ? this.getFilterBox() : null}\n      </li>\n    );\n  }\n}\n\nDraggableAttribute.defaultProps = {\n  valueFilter: {},\n};\n\nDraggableAttribute.propTypes = {\n  name: PropTypes.string.isRequired,\n  addValuesToFilter: PropTypes.func.isRequired,\n  removeValuesFromFilter: PropTypes.func.isRequired,\n  clearFilters: PropTypes.func.isRequired,\n  attrValues: PropTypes.objectOf(PropTypes.number).isRequired,\n  valueFilter: PropTypes.objectOf(PropTypes.bool),\n  moveFilterBoxToTop: PropTypes.func.isRequired,\n  sorter: PropTypes.func.isRequired,\n  menuLimit: PropTypes.number,\n  zIndex: PropTypes.number,\n};\n\nexport class Dropdown extends React.PureComponent {\n  render() {\n    return (\n      <div className=\"pvtDropdown\" style={{zIndex: this.props.zIndex}}>\n        <div className=\"pvtLabel\">Visualization Format</div>\n        <div\n          onClick={e => {\n            e.stopPropagation();\n            this.props.toggle();\n          }}\n          className={\n            'pvtDropdownValue pvtDropdownCurrent ' +\n            (this.props.open ? 'pvtDropdownCurrentOpen' : '')\n          }\n          role=\"button\"\n        >\n          <div className={this.props.open ? \"pvtDropdownIconOpen\" : \"pvtDropdownIcon\"} >▾</div>\n          {this.props.current || <span>&nbsp;</span>}\n        </div>\n\n        {this.props.open && (\n          <div className=\"pvtDropdownMenu\">\n            {this.props.values.map(r => (\n              <div\n                key={r}\n                role=\"button\"\n                onClick={e => {\n                  e.stopPropagation();\n                  if (this.props.current === r) {\n                    this.props.toggle();\n                  } else {\n                    this.props.setValue(r);\n                  }\n                }}\n                className={\n                  'pvtDropdownValue2 ' +\n                  (r === this.props.current ? 'pvtDropdownActiveValue' : '')\n                }\n              >\n                {r}\n              </div>\n            ))}\n          </div>\n        )}\n        <br/>\n        <SearchFilterUI onSearchChange={s => {\n          this.onSearchChange(s)\n        }}/>\n      </div>\n    );\n  }\n\n  onSearchChange (s) {\n    this.props.onSearchChange(s);\n  }\n\n}\n\nclass PivotTableUI extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      unusedOrder: [],\n      zIndices: {},\n      maxZIndex: 1000,\n      openDropdown: false,\n    };\n  }\n\n  componentWillMount() {\n    this.materializeInput(this.props.data);\n  }\n\n  componentWillUpdate(nextProps) {\n    this.materializeInput(nextProps.data);\n  }\n\n  materializeInput(nextData) {\n    if (this.data === nextData) {\n      return;\n    }\n    this.data = nextData;\n    const attrValues = {};\n    const materializedInput = [];\n    let recordsProcessed = 0;\n    PivotData.forEachRecord(this.data, this.props.derivedAttributes, function(\n      record\n    ) {\n      materializedInput.push(record);\n      for (const attr of Object.keys(record)) {\n        if (!(attr in attrValues)) {\n          attrValues[attr] = {};\n          if (recordsProcessed > 0) {\n            attrValues[attr].null = recordsProcessed;\n          }\n        }\n      }\n      for (const attr in attrValues) {\n        const value = attr in record ? record[attr] : 'null';\n        if (!(value in attrValues[attr])) {\n          attrValues[attr][value] = 0;\n        }\n        attrValues[attr][value]++;\n      }\n      recordsProcessed++;\n    });\n\n    this.materializedInput = materializedInput;\n    this.attrValues = attrValues;\n  }\n\n  sendPropUpdate(command) {\n    this.props.onChange(update(this.props, command));\n  }\n\n  propUpdater(key) {\n    return value => this.sendPropUpdate({[key]: {$set: value}});\n  }\n\n  setValuesInFilter(attribute, values) {\n    this.sendPropUpdate({\n      valueFilter: {\n        [attribute]: {\n          $set: values.reduce((r, v) => {\n            r[v] = true;\n            return r;\n          }, {}),\n        },\n      },\n    });\n  }\n\n  addValuesToFilter(attribute, values) {\n    if (attribute in this.props.valueFilter) {\n      this.sendPropUpdate({\n        valueFilter: {\n          [attribute]: values.reduce((r, v) => {\n            r[v] = {$set: true};\n            return r;\n          }, {}),\n        },\n      });\n    } else {\n      this.setValuesInFilter(attribute, values);\n    }\n  }\n\n  removeValuesFromFilter(attribute, values) {\n      this.sendPropUpdate({\n        valueFilter: {[attribute]: {$unset: values}},\n      });\n\n  }\n\n  clearFilters(attribute) {\n    this.sendPropUpdate({\n      valueFilter: {[attribute]: {0 : 0}},\n    });\n  }\n\n  moveFilterBoxToTop(attribute) {\n    this.setState(\n      update(this.state, {\n        maxZIndex: {$set: this.state.maxZIndex + 1},\n        zIndices: {[attribute]: {$set: this.state.maxZIndex + 1}},\n      })\n    );\n  }\n\n  isOpen(dropdown) {\n    return this.state.openDropdown === dropdown;\n  }\n\n  makeDnDCell(items, onChange, classes, categories = undefined) {\n\n    const selectedList = this.props.cols.concat(this.props.rows)\n\n    let collapsibles = [], draggables;\n    if (categories) {\n      for(let category in categories) {\n\n        draggables = [];\n        items.map(x => {\n          if (categories[category].includes(x)) {\n            draggables.push(<DraggableAttribute\n              name={x}\n              key={x}\n              attrValues={this.attrValues[x]}\n              valueFilter={this.props.valueFilter[x] || {}}\n              sorter={getSort(this.props.sorters, x)}\n              menuLimit={this.props.menuLimit}\n              setValuesInFilter={this.setValuesInFilter.bind(this)}\n              addValuesToFilter={this.addValuesToFilter.bind(this)}\n              moveFilterBoxToTop={this.moveFilterBoxToTop.bind(this)}\n              removeValuesFromFilter={this.removeValuesFromFilter.bind(this)}\n              clearFilters={this.clearFilters.bind(this)}\n              zIndex={this.state.zIndices[x] || this.state.maxZIndex}\n              isSelected={selectedList.includes(x)}\n              cols={this.props.cols}\n              rows={this.props.rows}\n              onUpdateProperties={ (s) => this.sendPropUpdate(s)}\n            />);\n          }\n        });\n        let open = category.toLowerCase() === 'demographics' ? true : false;\n        collapsibles.push(\n          <Collapsible\n            trigger={category}\n            open={open}\n            //overflowWhenOpen=\"hidden\" //Aji updated\n            className=\"attrListClosed\"\n            openedClassName=\"attrListOpen\"\n            triggerClassName=\"attrHeaderClosed\"\n            triggerOpenedClassName=\"attrHeaderOpen\"\n          >\n            <Sortable\n              options={{\n                group: 'shared',\n                ghostClass: 'pvtPlaceholder',\n                filter: '.pvtFilterBox',\n                preventOnFilter: false,\n              }}\n              tag=\"div\"\n              onChange={onChange}\n              className={classes}\n            >\n              {draggables}\n            </Sortable>\n          </Collapsible>);\n      }\n      return (\n        <div className=\"pvtCollapsible\">\n          {collapsibles}\n        </div>\n      )\n    } else {\n      items.map(x => {\n        collapsibles.push(\n          <DraggableAttribute\n            name={x}\n            key={x}\n            attrValues={this.attrValues[x]}\n            valueFilter={this.props.valueFilter[x] || {}}\n            sorter={getSort(this.props.sorters, x)}\n            menuLimit={this.props.menuLimit}\n            setValuesInFilter={this.setValuesInFilter.bind(this)}\n            addValuesToFilter={this.addValuesToFilter.bind(this)}\n            moveFilterBoxToTop={this.moveFilterBoxToTop.bind(this)}\n            removeValuesFromFilter={this.removeValuesFromFilter.bind(this)}\n            clearFilters={this.clearFilters.bind(this)}\n            zIndex={this.state.zIndices[x] || this.state.maxZIndex}\n            isSelected={selectedList.includes(x)}\n            cols={this.props.cols}\n            rows={this.props.rows}\n            onUpdateProperties={ (s) => this.sendPropUpdate(s)}\n          />\n        );\n      });\n      return (\n        <Sortable\n          options={{\n            group: 'shared',\n            ghostClass: 'pvtPlaceholder',\n            filter: '.pvtFilterBox',\n            preventOnFilter: false,\n          }}\n          tag=\"td\"\n          className={classes}\n          onChange={onChange}\n        >\n          {collapsibles}\n        </Sortable>\n      )\n    }\n  }\n\n  onSearchChange (s) {\n    this.props.onSearchChange(s)\n  }\n\n  render() {\n    const numValsAllowed =\n      this.props.aggregators[this.props.aggregatorName]([])().numInputs || 0;\n\n    const rendererName =\n      this.props.rendererName in this.props.renderers\n        ? this.props.rendererName\n        : Object.keys(this.props.renderers)[0];\n\n    const rendererCell = (\n      <td className=\"pvtRenderers\">\n        <Dropdown\n          current={rendererName}\n          values={Object.keys(this.props.renderers)}\n          open={this.isOpen('renderer')}\n          zIndex={this.isOpen('renderer') ? this.state.maxZIndex + 1 : 1}\n          toggle={() =>\n            this.setState({\n              openDropdown: this.isOpen('renderer') ? false : 'renderer',\n            })\n          }\n          setValue={this.propUpdater('rendererName')}\n          onSearchChange={s => {\n            this.onSearchChange(s)\n          }}\n        />\n      </td>\n    );\n\n    const sortIcons = {\n      key_a_to_z: {\n        rowSymbol: '↕',\n        colSymbol: '↔',\n        next: 'value_a_to_z',\n      },\n      value_a_to_z: {\n        rowSymbol: '↓',\n        colSymbol: '→',\n        next: 'value_z_to_a',\n      },\n      value_z_to_a: {rowSymbol: '↑', colSymbol: '←', next: 'key_a_to_z'},\n    };\n\n    const aggregatorCell = (\n      <td className=\"pvtVals\">\n        <Tooltip content={HelpConstants.SORT_ROWS} eventOn='onClick' tagName='span'>\n          <MaterialIcon icon=\"help_outline\" className=\"pvtIconHelp\"/>\n        </Tooltip>\n        <a\n          role=\"button\"\n          className=\"pvtRowOrder\"\n          onClick={() =>\n            this.propUpdater('rowOrder')(sortIcons[this.props.rowOrder].next)\n          }\n        >\n         Sort rows {sortIcons[this.props.rowOrder].rowSymbol}\n        </a>\n        <br/>\n        <Tooltip content={HelpConstants.SORT_COLUMNS} eventOn='onClick' tagName='span'>\n          <MaterialIcon icon=\"help_outline\" className=\"pvtIconHelp\"/>\n        </Tooltip>\n        <a\n          role=\"button\"\n          className=\"pvtColOrder\"\n          onClick={() =>\n            this.propUpdater('colOrder')(sortIcons[this.props.colOrder].next)\n          }\n        >\n         Sort columns {sortIcons[this.props.colOrder].colSymbol}\n        </a>\n        {numValsAllowed > 0 && <br />}\n      </td>\n    );\n\n    const unusedAttrs = Object.keys(this.attrValues)\n      .filter(\n        e =>\n          !this.props.rows.includes(e) &&\n          !this.props.cols.includes(e) &&\n          !this.props.hiddenAttributes.includes(e) &&\n          !this.props.hiddenFromDragDrop.includes(e)\n      )\n      .sort(sortAs(this.state.unusedOrder));\n\n    const unusedLength = unusedAttrs.reduce((r, e) => r + e.length, 0);\n    const horizUnused = unusedLength < this.props.unusedOrientationCutoff;\n    const unusedAttrsCell = this.makeDnDCell(\n      unusedAttrs,\n      order => this.setState({unusedOrder: order}),\n      `pvtAxisContainer pvtUnused ${\n        horizUnused ? 'pvtHorizList' : 'pvtVertList collapsibleMenuContainer'\n      }`,\n      this.props.categoryToAttrMapping\n    );\n\n    const colAttrs = this.props.cols.filter(\n      e =>\n        !this.props.hiddenAttributes.includes(e) &&\n        !this.props.hiddenFromDragDrop.includes(e)\n    );\n\n    const colAttrsCell = this.makeDnDCell(\n      colAttrs,\n      this.propUpdater('cols'),\n      'pvtAxisContainer pvtHorizList pvtCols'\n    );\n\n    const rowAttrs = this.props.rows.filter(\n      e =>\n        !this.props.hiddenAttributes.includes(e) &&\n        !this.props.hiddenFromDragDrop.includes(e)\n    );\n    const rowAttrsCell = this.makeDnDCell(\n      rowAttrs,\n      this.propUpdater('rows'),\n      'pvtAxisContainer pvtVertList pvtRows'\n    );\n    const outputCell = (\n      <td className=\"pvtOutput\">\n        <div className=\"pvt-output-title\">{this.props.rendererName}</div>\n        <PivotTable\n          {...update(this.props, {\n            data: {$set: this.materializedInput},\n          })}\n        />\n      </td>\n    );\n\n    if (horizUnused) {\n      return (\n        <table className=\"pvtUi\">\n          <tbody onClick={() => this.setState({openDropdown: false})}>\n            <tr>\n              {rendererCell}\n              {unusedAttrsCell}\n            </tr>\n            <tr>\n              {aggregatorCell}\n              {colAttrsCell}\n            </tr>\n            <tr>\n              {rowAttrsCell}\n              {outputCell}\n            </tr>\n          </tbody>\n        </table>\n      );\n    }\n\n    return (\n      <table className=\"pvtUi\">\n        <tbody onClick={() => this.setState({openDropdown: false})}>\n          <tr>\n            {rendererCell}\n            {aggregatorCell}\n            {colAttrsCell}\n          </tr>\n          <tr>\n            {unusedAttrsCell}\n            {rowAttrsCell}\n            {outputCell}\n          </tr>\n        </tbody>\n      </table>\n    );\n  }\n}\n\nPivotTableUI.propTypes = Object.assign({}, PivotTable.propTypes, {\n  onChange: PropTypes.func.isRequired,\n  hiddenAttributes: PropTypes.arrayOf(PropTypes.string),\n  hiddenFromAggregators: PropTypes.arrayOf(PropTypes.string),\n  hiddenFromDragDrop: PropTypes.arrayOf(PropTypes.string),\n  unusedOrientationCutoff: PropTypes.number,\n  menuLimit: PropTypes.number,\n});\n\nPivotTableUI.defaultProps = Object.assign({}, PivotTable.defaultProps, {\n  hiddenAttributes: [],\n  hiddenFromAggregators: [],\n  hiddenFromDragDrop: [],\n  unusedOrientationCutoff: 85,\n  menuLimit: 500,\n});\n\nexport default PivotTableUI;\n\n"]}